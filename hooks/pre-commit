#!/bin/sh
# Copyright 2012 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.
# The only modification is that gofmt is automatically
# run on every unformatted .go file pre-commit.

# git gofmt pre-commit hook
#
# To use, store as .git/hooks/pre-commit inside your repository and make sure
# it has execute permissions.
#
# This script does not handle file names that contain spaces.

govet=$(go vet ./lib)
if [[ ! -z "$govet" ]]; then
	echo "vet checks not passed: $govet \n"
	exit 1
fi

lint=$(golint -set_exit_status)
if [[ ! -z "$golint" ]]; then
	echo "lint checks not passed: $golint"
	exit 1
fi

build=$(go build)
if [[ $? -ne 0 ]]; then
	echo "commit failed to build: return code $build"
	exit $build
fi

gofiles=$(git diff --cached --name-only --diff-filter=ACM | grep '.go$')

gofiles=$(git diff --cached --name-only --diff-filter=ACM | grep '.go$')
[ -z "$gofiles" ] && exit 0

unformatted=$(gofmt -l $gofiles)
[ -z "$unformatted" ] && exit 0

# run gofmt on improperly formatted files.
for fn in $unformatted; do
	gofmt -w -e $PWD/$fn
	git add $PWD/$fn
done

exit 0